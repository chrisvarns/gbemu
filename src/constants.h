#pragma once
#include "types.h"

const int gb_width = 160;
const int gb_height = 144;
const int bytes_per_pixel = 4;
const int total_gb_display_bytes = gb_width * gb_height * bytes_per_pixel;

enum class AddressRegion : u16
{
	BOOTROM_START = 0x0000,
	BOOTROM_END = 0x0100,
	ROMBANK_STATIC_START = 0x0000,
	ROMBANK_STATIC_END = 0x4000,
	ROMBANK_SWITCHABLE_START = 0x4000,
	ROMBANK_SWITCHABLE_END = 0x8000,
	VRAM_START = 0x8000,
	VRAM_END = 0xA000,
	RAMBANK_SWITCHABLE_START = 0xA000,
	RAMBANK_SWITCHABLE_END = 0xC000,
	RAMBANK_INTERNAL_START = 0xC000,
	RAMBANK_INTERNAL_END = 0xE000,
	RAMBANK_INTERNAL_ECHO_START = 0xE000,
	RAMBANK_INTERNAL_ECHO_END = 0xFE00,
	OAM_START = 0xFE00,
	OAM_END = 0xFEA0,
	IO_START = 0xFF00,
	IO_END = 0xFF80,
	ZEROPAGE_START = 0xFF80,
	ZEROPAGE_END = 0xFFFF,

	SELECT_START = 0x0000,
	RAMBANK_ENABLE_START = 0x0000,
	RAMBANK_ENABLE_END = 0x2000,
	ROMBANK_SELECT_START = 0x2000,
	ROMBANK_SELECT_END = 0x4000,
	RAMBANK_SELECT_START = 0x4000,
	RAMBANK_SELECT_END = 0x6000,
	MBC1_SELECT_START = 0x6000,
	MBC1_SELECT_END = 0x8000,
	SELECT_END = 0x8000,

	// LCD control register controlled start addresses. Mode refers to whether relevant LCDC bit is set
	BACKGROUND_TILE_MAP_MODE_0_START = 0x9800,
	BACKGROUND_TILE_MAP_MODE_0_END = 0x9C00,
	BACKGROUND_TILE_MAP_MODE_1_START = 0x9C00,
	BACKGROUND_TILE_MAP_MODE_1_END = 0xA000,
};

enum class SpecialRegister : u16
{
	SOUND_NR11 = 0xFF11,
	SOUND_NR12 = 0xFF12,
	SOUND_NR13 = 0xFF13,
	SOUND_NR14 = 0xFF14,
	SOUND_NR50 = 0xFF24,
	SOUND_NR51 = 0xFF25,
	SOUND_NR52 = 0xFF26,
	VIDEO_LCDC = 0xFF40,
	VIDEO_SCY = 0xFF42,
	VIDEO_SCX = 0xFF43,
	VIDEO_LY = 0xFF44,
	VIDEO_BGP = 0xFF47,
	BOOTROM_SWITCH = 0xFF50,
	INTERRUPT_ENABLE = 0xFFFF,
};

enum class LCDC_FLAGS : u8
{
	LCD_POWER = 0x80,
};